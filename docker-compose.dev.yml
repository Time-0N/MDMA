version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile.dev
    container_name: MDMA_frontend_dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "4200:4200"
    environment:
      - WATCHPACK_POLLING=true
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile.dev
    container_name: MDMA_backend_dev
    volumes:
      - ./backend:/app/backend
      - ./gradle:/app/gradle
      - ./gradlew:/app/gradlew
      - ./settings.gradle.kts:/app/settings.gradle.kts
      - ./build.gradle.kts:/app/build.gradle.kts
      - gradle-cache:/gradle-cache
      - ./.env:/app/.env
    ports:
      - "9090:9090"
      - "5005:5005"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: ["./gradlew", ":backend:bootRun", "--args='--spring.profiles.active=dev'"]

  db:
    image: postgres:16
    container_name: MDMA_postgres_dev
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    container_name: MDMA_keycloak_dev
    command: start-dev --import-realm
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/dev-realm.json
    volumes:
      - ./docker/keycloak:/opt/keycloak/data/import
      - keycloak-data:/opt/keycloak/data

volumes:
  db-data:
  keycloak-data:
  gradle-cache:
